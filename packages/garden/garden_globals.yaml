
#===========
#=== Groups
#===========
group:
  irrigation_switches:
    entities:
      - switch.zone1
      - switch.zone2
      - switch.zone3
      - switch.zone4
      - switch.zone5
      - switch.zone6
      - switch.zone7
      - switch.zone8
      - switch.zone9
      - switch.zone10
      - switch.zone11
      - switch.zone12
      - switch.zone13
      - switch.zone14
      - switch.zone15
      - switch.zone16


#===================
#=== Input_Booleans
#===================
input_boolean:

  irrigation_master_control_switch:
    name: Master Control Switch
    icon: mdi:bomb

  cycle1_enable:
    name: Enable schedule
    icon: mdi:pipe
    
  cycle2_enable:
    name: Enable schedule
    icon: mdi:pipe

  cycle1_enable_saved_state:
    
  cycle2_enable_saved_state:

  # cycle1_use_weather_adjustment:
  #   name: Use weather adjustment
  #   icon: mdi:weather-partlycloudy

  # cycle2_use_weather_adjustment:
  #   name: Use weather adjustment
  #   icon: mdi:weather-partlycloudy

  cycle1_manual_run:
    name: Run west side now
    icon: mdi:arrow-right-drop-circle

  cycle2_manual_run:
    name: Run east side cycle now
    icon: mdi:arrow-right-drop-circle

  cycle1_running:
    name: Cycle1_running

  cycle2_running:
    name: Cycle2_running


#================
#=== Input_Texts
#================
input_text:
  cycle1_current_zone:
    name: Cycle 1 current zone

  cycle2_current_zone:
    name: Cycle 2 current zone


#==================
#=== Input_Selects
#==================
input_select:

  cycle1_watering_days:
    name: West side cycle watering days
    options:
      - 'Daily'
      - 'Alternate'
      - 'Once'
    icon: mdi:calendar

  cycle2_watering_days:
    name: East side cycle watering days
    options:
      - 'Daily'
      - 'Alternate'
      - 'Once'
    icon: mdi:calendar

  cycle1_schedule_time:
    name: West side cycle schedule start time
    options:
      - '13:00'
      - '14:00'
      - '15:00'
      - '16:00'
      - '17:00'
      - '18:00'
    icon: mdi:alarm

  cycle2_schedule_time:
    name: East side cycle schedule start time
    options:
      - '13:00'
      - '14:00'
      - '15:00'
      - '16:00'
      - '17:00'
      - '18:00'
    icon: mdi:alarm


#====================
#=== Input_Datetimes
#====================
input_datetime:
  cycle1_next_run_time:
    has_date: true
    has_time: true

  cycle2_next_run_time:
    has_date: true
    has_time: true

  last_irrigated_time:
    has_date: true
    has_time: true


#==================
#=== Input_Numbers
#==================
input_number:

  # CYCLE 1
  cycle1_zone1_duration:
    name: Roses
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  cycle1_zone2_duration:
    name: Pool
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  cycle1_zone3_duration:
    name: Walkway
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  cycle1_zone4_duration:
    name: Citrus
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  cycle1_zone5_duration:
    name: Lavander
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  cycle1_zone6_duration:
    name: Zone 6 duration
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  cycle1_zone7_duration:
    name: Zone 7 duration
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  cycle1_zone8_duration:
    name: Zone 8 duration
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  # CYCLE 2
  cycle2_zone9_duration:
    name: Beds
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  cycle2_zone10_duration:
    name: Poolside
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer  
    unit_of_measurement: mins

  cycle2_zone11_duration:
    name: Upper Garden
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer
    unit_of_measurement: mins

  cycle2_zone12_duration:
    name: Vineyard
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer  
    unit_of_measurement: mins

  cycle2_zone13_duration:
    name: Guest House
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer  
    unit_of_measurement: mins

  cycle2_zone14_duration:
    name: Guest Driveway
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer  
    unit_of_measurement: mins

  cycle2_zone15_duration:
    name: Main Driveway
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer  
    unit_of_measurement: mins

  cycle2_zone16_duration:
    name: Orchard
    min: 0
    max: 10
    step: 1
    icon: mdi:camera-timer  
    unit_of_measurement: mins

  # The temperature above or below which the duration is adjusted
  # temperature_baseline:
  #   name: Temperature baseline
  #   min: 20
  #   max: 30
  #   icon: mdi:thermometer
  #   unit_of_measurement: 'Â°C'

  # How much rain is needed before the duration is reduced
  # rainfall_threshold:
  #   name: Rainfall threshold
  #   min: 5
  #   max: 30
  #   icon: mdi:weather-rainy
  #   unit_of_measurement: 'mm'

  # Adjusted duration times can be extreme during calculations
  # depending on weather conditions so min and max are set high
  # adjusted_cycle1_zone1_duration:
  #   name: Adjusted cycle1 zone1 duration
  #   min: -60
  #   max: 60

  # adjusted_cycle1_zone2_duration:
    # name: Adjusted cycle1 zone2 duration
    # min: -60
    # max: 60

  # adjusted_cycle1_zone3_duration:
    # name: Adjusted cycle1 zone3 duration
    # min: -60
    # max: 60

  # adjusted_cycle1_zone4_duration:
  #   name: Adjusted cycle1 zone4 duration
  #   min: -60
  #   max: 60

  # adjusted_cycle1_zone5_duration:
  #   name: Adjusted cycle1 zone5 duration
  #   min: -60
  #   max: 120

  # adjusted_cycle1_zone6_duration:
  #   name: Adjusted cycle1 zone6 duration
  #   min: -60
  #   max: 120

  # adjusted_cycle1_zone7_duration:
  #   name: Adjusted cycle1 zone7 duration
  #   min: -60
  #   max: 120

  # adjusted_cycle1_zone8_duration:
  #   name: Adjusted cycle1 zone8 duration
  #   min: -60
  #   max: 120

  # adjusted_cycle2_zone1_duration:
  #   name: Adjusted cycle1 zone1 duration
  #   min: -60
  #   max: 60

  # adjusted_cycle2_zone2_duration:
  #   name: Adjusted cycle1 zone2 duration
  #   min: -60
  #   max: 60

  # adjusted_cycle2_zone3_duration:
  #   name: Adjusted cycle1 zone3 duration
  #   min: -60
  #   max: 60

  # adjusted_cycle2_zone4_duration:
  #   name: Adjusted cycle1 zone4 duration
  #   min: -60
  #   max: 60

  # adjusted_cycle2_zone5_duration:
  #   name: Adjusted cycle1 zone5 duration
  #   min: -60
  #   max: 120

  # adjusted_cycle2_zone6_duration:
  #   name: Adjusted cycle1 zone6 duration
  #   min: -60
  #   max: 120

  # adjusted_cycle2_zone7_duration:
  #   name: Adjusted cycle1 zone7 duration
  #   min: -60
  #   max: 120

  # adjusted_cycle2_zone8_duration:
  #   name: Adjusted cycle1 zone8 duration
  #   min: -60
  #   max: 120

 
#===========
#=== timers
#===========
timer:
  cycle1_zone_duration:
    name: Time remaining

  cycle2_zone_duration:
    name: Time remaining


#============
#=== Sensors
#============
sensor:
  - platform: template
    sensors:

      cycle1_next_run_time:
        friendly_name: "Next scheduled run time"
        value_template: >
          {% if is_state('input_boolean.cycle1_enable', 'on') %}
            {{ state_attr('input_datetime.cycle1_next_run_time', 'timestamp') | timestamp_custom("%a %d %h at %H:%M") }}
          {% else %}
            None
          {% endif %}

      cycle2_next_run_time:
        friendly_name: "Next scheduled run time"
        value_template: >
          {% if is_state('input_boolean.cycle2_enable', 'on') %}
            {{ state_attr('input_datetime.cycle2_next_run_time', 'timestamp') | timestamp_custom("%a %d %h at %H:%M") }}
          {% else %}
            None
          {% endif %}

      cycle1_running:
        friendly_name: "West cycle"
        value_template: >
          {% if is_state('input_boolean.cycle1_running', 'on') %}
            Running
          {% else %}
            Not running
          {% endif %}     
        icon_template: >
          {% if is_state('input_boolean.cycle1_running', 'on') %}
            mdi:run
          {% else %}
            mdi:human-handsdown
          {% endif %}     
          
      cycle2_running:
        friendly_name: "East cycle"
        value_template: >
          {% if is_state('input_boolean.cycle2_running', 'on') %}
            Running
          {% else %}
            Not running
          {% endif %}     
        icon_template: >
          {% if is_state('input_boolean.cycle2_running', 'on') %}
            mdi:run
          {% else %}
            mdi:human-handsdown
          {% endif %}     

      cycle1_zone_being_watered:
        friendly_name: "Zone being watered"
        value_template: "{{ states('input_text.cycle1_current_zone') }}"     
        
      cycle2_zone_being_watered:
        friendly_name: "Zone being watered"
        value_template: "{{ states('input_text.cycle2_current_zone') }}"     

      last_irrigated_time:
        friendly_name: "Last irrigation cycle ended"
        value_template: >
          {{ (as_timestamp(states.input_datetime.last_irrigated_time.state)) | timestamp_custom("%a %d %h at %H:%M") }}
        
      # Zone Times - templated on history_stats sensors
      zone1_time_today:
        friendly_name: Roses total watering time
        value_template: >
          {% set duration = states('sensor.zone1_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone2_time_today:
        friendly_name: Pool total watering time
        value_template: >
          {% set duration = states('sensor.zone2_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins
        
      zone3_time_today:
        friendly_name: Walkway total watering time
        value_template: >
          {% set duration = states('sensor.zone3_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins
        
      zone4_time_today:
        friendly_name: Citrus total watering time
        value_template: >
          {% set duration = states('sensor.zone4_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins
        
      zone5_time_today:
        friendly_name: Lavander total watering time
        value_template: >
          {% set duration = states('sensor.zone5_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone6_time_today:
        friendly_name: Zone 6 total watering time
        value_template: >
          {% set duration = states('sensor.zone6_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone7_time_today:
        friendly_name: Zone 7 total watering time
        value_template: >
          {% set duration = states('sensor.zone7_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone8_time_today:
        friendly_name: Zone 8 total watering time
        value_template: >
          {% set duration = states('sensor.zone8_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone9_time_today:
        friendly_name: Beds total watering time
        value_template: >
          {% set duration = states('sensor.zone9_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone10_time_today:
        friendly_name: Poolside total watering time
        value_template: >
          {% set duration = states('sensor.zone10_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins        

      zone11_time_today:
        friendly_name: Upper Garden total watering time
        value_template: >
          {% set duration = states('sensor.zone11_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone12_time_today:
        friendly_name: Vineyard total watering time
        value_template: >
          {% set duration = states('sensor.zone12_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone13_time_today:
        friendly_name: Guest House total watering time
        value_template: >
          {% set duration = states('sensor.zone13_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone14_time_today:
        friendly_name: Guest Driveway total watering time
        value_template: >
          {% set duration = states('sensor.zone14_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone15_time_today:
        friendly_name: Main Driveway total watering time
        value_template: >
          {% set duration = states('sensor.zone15_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins

      zone16_time_today:
        friendly_name: Orchard total watering time
        value_template: >
          {% set duration = states('sensor.zone16_time') %}
          {{ duration|float|multiply(60)|round }}
        unit_of_measurement: mins


  # History sensors
  # Zone Times
  - platform: history_stats
    name: zone1_time
    entity_id: switch.zone1
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone2_time
    entity_id: switch.zone2
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone3_time
    entity_id: switch.zone3
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone4_time
    entity_id: switch.zone4
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone5_time
    entity_id: switch.zone5
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone6_time
    entity_id: switch.zone6
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone7_time
    entity_id: switch.zone7
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone8_time
    entity_id: switch.zone8
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone9_time
    entity_id: switch.zone9
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone10_time
    entity_id: switch.zone10
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone11_time
    entity_id: switch.zone11
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone12_time
    entity_id: switch.zone12
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone13_time
    entity_id: switch.zone13
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'    

  - platform: history_stats
    name: zone14_time
    entity_id: switch.zone14
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone15_time
    entity_id: switch.zone15
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: zone16_time
    entity_id: switch.zone16
    state: 'on'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'
